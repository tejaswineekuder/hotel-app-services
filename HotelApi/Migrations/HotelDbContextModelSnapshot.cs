// <auto-generated />
using System;
using HotelApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace hotel_app_services.Migrations
{
    [DbContext(typeof(HotelDbContext))]
    partial class HotelDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.8");

            modelBuilder.Entity("HotelApi.Models.Entities.Room", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BedCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("RoomCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("HotelApi.Models.Entities.RoomReservation", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ReservationDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("RoomID")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("TravellerId")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("RoomID");

                    b.HasIndex("TravellerId");

                    b.ToTable("RoomReservations");
                });

            modelBuilder.Entity("HotelApi.Models.Entities.TravelGroup", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ArrivalDate")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("TravelGroups");
                });

            modelBuilder.Entity("HotelApi.Models.Entities.Traveller", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT");

                    b.Property<string>("TravelGroupId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("TravelGroupId");

                    b.ToTable("Travellers");
                });

            modelBuilder.Entity("HotelApi.Models.Entities.RoomReservation", b =>
                {
                    b.HasOne("HotelApi.Models.Entities.Room", "Room")
                        .WithMany("RoomReservations")
                        .HasForeignKey("RoomID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HotelApi.Models.Entities.Traveller", "Traveller")
                        .WithMany("RoomReservations")
                        .HasForeignKey("TravellerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");

                    b.Navigation("Traveller");
                });

            modelBuilder.Entity("HotelApi.Models.Entities.Traveller", b =>
                {
                    b.HasOne("HotelApi.Models.Entities.TravelGroup", "TravelGroup")
                        .WithMany("Travellers")
                        .HasForeignKey("TravelGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TravelGroup");
                });

            modelBuilder.Entity("HotelApi.Models.Entities.Room", b =>
                {
                    b.Navigation("RoomReservations");
                });

            modelBuilder.Entity("HotelApi.Models.Entities.TravelGroup", b =>
                {
                    b.Navigation("Travellers");
                });

            modelBuilder.Entity("HotelApi.Models.Entities.Traveller", b =>
                {
                    b.Navigation("RoomReservations");
                });
#pragma warning restore 612, 618
        }
    }
}
